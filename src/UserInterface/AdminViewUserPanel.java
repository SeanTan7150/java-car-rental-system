package UserInterface;

import Classes.TimeGranularity;
import Classes.User;
import Classes.UserRole;
import DAO.UserDao;
import Processes.ManageAccProcess;
import java.awt.CardLayout;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

public class AdminViewUserPanel extends javax.swing.JPanel {
    private String select, approval;
    DefaultTableModel model;
    ArrayList<User> Custs;

    public AdminViewUserPanel() {
        initComponents();
        model = (DefaultTableModel) CustTable.getModel();
    }

    public void setAllCust() throws ParseException {
        reset();
        String[] columnName = { "ID", "Name", "Email", "Phone", "Gender", "Registered", "Approval" };
        model.setColumnIdentifiers(columnName);
        CustTable.setDefaultEditor(Object.class, null);
        CustTable.getTableHeader().setResizingAllowed(false);

        TimeGranularity tg = new TimeGranularity();

        UserDao userDao = new UserDao();

        if (UserDao.loggedIn.getRole().equals(UserRole.ADMIN.toString())) {
            Custs = userDao.searchRole(UserRole.CUSTOMER.toString());
        } 
        else if (UserDao.loggedIn.getRole().equals(UserRole.SUPERADMIN.toString())) {
            Custs = userDao.searchRole(UserRole.ADMIN.toString(), UserRole.CUSTOMER.toString());
        }

        if (Custs != null) {
            for (User cust : Custs) {
                tg.setGranularity(cust.getRegistered());
                String[] custRow = { cust.getIcno(), cust.getUsername(), cust.getEmail(), cust.getPhone(),
                        cust.getGender(), tg.getGranularity(), cust.getApproval() };
                model.addRow(custRow);
            }
        }
    }

    public void getSearchedCust(ArrayList<User> results) throws ParseException {
        reset();
        String[] columnName = { "ID", "Name", "Email", "Phone", "Gender", "Registered", "Approval" };
        model.setColumnIdentifiers(columnName);
        CustTable.setDefaultEditor(Object.class, null);
        CustTable.getTableHeader().setResizingAllowed(false);

        TimeGranularity tg = new TimeGranularity();
        for (User result : results) {
            tg.setGranularity(result.getRegistered());
            String[] custRow = { result.getIcno(), result.getUsername(), result.getEmail(), result.getPhone(),
                    result.getGender(), tg.getGranularity(), result.getApproval() };
            model.addRow(custRow);
        }
    }

    public void reset() {
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        ViewButton.setEnabled(false);
        EditButton.setEnabled(false);
        RemoveButton.setEnabled(false);
        ApproveButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CustTable = new javax.swing.JTable();
        UsersLabel = new javax.swing.JLabel();
        ViewButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        SearchTextField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        ApproveButton = new javax.swing.JButton();

        CustTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CustTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        {}
                },
                new String[] {

                }));
        CustTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CustTable);

        UsersLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        UsersLabel.setText("Users");

        ViewButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ViewButton.setText("View");
        ViewButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewButton.setEnabled(false);
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        EditButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EditButton.setText("Edit");
        EditButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditButton.setEnabled(false);
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BackButton.setText("Back");
        BackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        RemoveButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        RemoveButton.setText("Remove");
        RemoveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RemoveButton.setEnabled(false);
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        AddButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        AddButton.setText("Add");
        AddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        SearchTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        SearchButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.setToolTipText("");
        SearchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        ApproveButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ApproveButton.setText("Approve");
        ApproveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ApproveButton.setEnabled(false);
        ApproveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(UsersLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(SearchButton))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addComponent(ViewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(RemoveButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(ApproveButton))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.PREFERRED_SIZE, 811,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(41, Short.MAX_VALUE)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(UsersLabel)
                                        .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SearchButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ViewButton)
                                        .addComponent(EditButton)
                                        .addComponent(RemoveButton)
                                        .addComponent(AddButton)
                                        .addComponent(BackButton)
                                        .addComponent(ApproveButton))
                                .addContainerGap(131, Short.MAX_VALUE)));
    }// </editor-fold>//GEN-END:initComponents

    private void CustTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_CustTableMouseClicked
        javax.swing.JTable target = (javax.swing.JTable) evt.getSource();
        int row = target.getSelectedRow();
        select = CustTable.getValueAt(row, 0).toString();
        approval = CustTable.getValueAt(row, 6).toString();

        ViewButton.setEnabled(true);
        RemoveButton.setEnabled(true);

        if (approval.equals("YES")) {
            EditButton.setEnabled(true);
            ApproveButton.setEnabled(false);
        } else {
            EditButton.setEnabled(false);
            ApproveButton.setEnabled(true);
        }
    }// GEN-LAST:event_CustTableMouseClicked

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ViewButtonActionPerformed
        Frame f = (Frame) SwingUtilities.getWindowAncestor(this);
        f.AdminViewUserDetailsPanel.getCustId(select);
        CardLayout cardLayout = (CardLayout) f.getControlPanel().getLayout();
        cardLayout.show(f.getControlPanel(), "adminViewCustDetailsPanel");
    }// GEN-LAST:event_ViewButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_EditButtonActionPerformed
        Frame f = (Frame) SwingUtilities.getWindowAncestor(this);
        f.AdminViewUserDetailsPanel.getCustId(select);
        f.AdminViewUserDetailsPanel.setEdit();
        CardLayout cardLayout = (CardLayout) f.getControlPanel().getLayout();
        cardLayout.show(f.getControlPanel(), "adminViewCustDetailsPanel");
    }// GEN-LAST:event_EditButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BackButtonActionPerformed
        Frame f = (Frame) SwingUtilities.getWindowAncestor(this);
        CardLayout cardLayout = (CardLayout) f.getControlPanel().getLayout();
        cardLayout.show(f.getControlPanel(), "adminHomePanel");
    }// GEN-LAST:event_BackButtonActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_RemoveButtonActionPerformed
        try {
            if (JOptionPane.showConfirmDialog(null, "Confirm remove?", "WARNING",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                ManageAccProcess map = new ManageAccProcess();
                if (map.removeAcc(select)) {
                    setAllCust();
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to remove account.");
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(AdminViewUserDetailsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_RemoveButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_AddButtonActionPerformed
        Frame f = (Frame) SwingUtilities.getWindowAncestor(this);
        f.AdminRegisterUserPanel.setRoleComboBox();
        CardLayout cardLayout = (CardLayout) f.getControlPanel().getLayout();
        cardLayout.show(f.getControlPanel(), "adminRegisterCustPanel");
    }// GEN-LAST:event_AddButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_SearchButtonActionPerformed
        try {
            String search = SearchTextField.getText();
            if (search.trim().equals("")) {
                setAllCust();
            } else {
                UserDao userDao = new UserDao();
                ArrayList<User> Searches = null;
                
                if (UserDao.loggedIn.getRole().equals(UserRole.ADMIN.toString())) {
                    Searches = userDao.searchRole(UserRole.CUSTOMER.toString());
                }
                else if (UserDao.loggedIn.getRole().equals(UserRole.SUPERADMIN.toString())) {
                    Searches = userDao.searchRole(UserRole.ADMIN.toString(), UserRole.CUSTOMER.toString());
                }
                
                ArrayList<User> SearchResult = new ArrayList<>();
                for (User cust : Searches) {
                    if (cust.getIcno().contains(search) || cust.getUsername().contains(search)
                            || cust.getEmail().contains(search) || cust.getPhone().contains(search)) {
                        SearchResult.add(cust);
                    }
                }
                getSearchedCust(SearchResult);
            }
        } catch (ParseException ex) {
            Logger.getLogger(AdminViewUserDetailsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_SearchButtonActionPerformed

    private void ApproveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_ApproveButtonActionPerformed
        try {
            ManageAccProcess map = new ManageAccProcess();
            if (map.approveAcc(select)) {
                setAllCust();
            } else {
                JOptionPane.showMessageDialog(null, "Failed to approve account.");
            }
        } catch (ParseException ex) {
            Logger.getLogger(AdminViewUserDetailsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }// GEN-LAST:event_ApproveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton ApproveButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JTable CustTable;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JLabel UsersLabel;
    private javax.swing.JButton ViewButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}