package UserInterface;

import Processes.BookingProcess;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class BookingListingPanel extends javax.swing.JPanel {
    private BookingProcess bp = new BookingProcess();

    public BookingListingPanel() {
        initComponents();
        buildTable(null, false, false);
    }

    public final void buildTable(String idToBeSearched, boolean filterPendingApproval, boolean filterUnpaid) {
        bp.buildTable(BookingListingTable, "Booking Listing", idToBeSearched, filterPendingApproval, filterUnpaid);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookingListingTable = new javax.swing.JTable();
        pendingApprovalCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        unpaidCheckBox = new javax.swing.JCheckBox();
        BackButton = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bookings");

        searchTextField.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        searchTextField.setText("Search using Booking ID");
        searchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextFieldActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        BookingListingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        BookingListingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookingListingTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BookingListingTable);

        pendingApprovalCheckBox.setText("Pending Approval");
        pendingApprovalCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingApprovalCheckBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Filter:");

        unpaidCheckBox.setText("Unpaid");
        unpaidCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unpaidCheckBoxActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BackButton.setText("Back");
        BackButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(jLabel1)
                            .addGap(28, 28, 28)
                            .addComponent(pendingApprovalCheckBox)
                            .addGap(18, 18, 18)
                            .addComponent(unpaidCheckBox))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(124, 124, 124))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pendingApprovalCheckBox)
                    .addComponent(jLabel1)
                    .addComponent(unpaidCheckBox)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackButton)
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(30, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addContainerGap(522, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pendingApprovalCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingApprovalCheckBoxActionPerformed
        String searchText = searchTextField.getText();
        boolean filterPendingApproval = pendingApprovalCheckBox.isSelected();
        boolean filterUnpaid = unpaidCheckBox.isSelected();
        
        if (searchText.equals("Search using Booking ID") || searchText.equals("")) {
            buildTable(null, filterPendingApproval, filterUnpaid);
        } else {
            buildTable(searchText, filterPendingApproval, filterUnpaid);
        }
    }//GEN-LAST:event_pendingApprovalCheckBoxActionPerformed

    private void unpaidCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unpaidCheckBoxActionPerformed
        String searchText = searchTextField.getText();
        boolean filterPendingApproval = pendingApprovalCheckBox.isSelected();
        boolean filterUnpaid = unpaidCheckBox.isSelected();
        
        if (searchText.equals("Search using Booking ID") || searchText.equals("")) {
            buildTable(null, filterPendingApproval, filterUnpaid);
        } else {
            buildTable(searchText, filterPendingApproval, filterUnpaid);
        }
    }//GEN-LAST:event_unpaidCheckBoxActionPerformed

    private void searchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextFieldActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        Frame f = (Frame) SwingUtilities.getWindowAncestor(this);
        CardLayout cardLayout = (CardLayout) f.getControlPanel().getLayout();
        cardLayout.show(f.getControlPanel(), "adminHomePanel");
    }//GEN-LAST:event_BackButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String searchText = searchTextField.getText();
        boolean filterPendingApproval = pendingApprovalCheckBox.isSelected();
        boolean filterUnpaid = unpaidCheckBox.isSelected();
        
        if (searchText.equals("")) {
            buildTable(null, filterPendingApproval, filterUnpaid);
        } else {
            buildTable(searchText, filterPendingApproval, filterUnpaid);
        }
    }// GEN-LAST:event_searchButtonActionPerformed

    private void BookingListingTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_BookingListingTableMouseClicked
        // TODO add your handling code here:
        Frame currentJFrame = (Frame) SwingUtilities.getWindowAncestor(this);
        JPanel controlPanel = currentJFrame.getControlPanel();
        CardLayout layout = (CardLayout) controlPanel.getLayout();

        javax.swing.JTable target = (javax.swing.JTable) evt.getSource();
        int row = target.getSelectedRow();
        String bookingId = BookingListingTable.getValueAt(row, 0).toString();

        currentJFrame.bookingDetailPanel.setBookingDetail(bookingId);
        layout.show(controlPanel, "bookingDetailPanel");
    }// GEN-LAST:event_BookingListingTableMouseClicked

    private void carButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_carButtonActionPerformed
        // TODO add your handling code here:
        Frame currentJFrame = (Frame) SwingUtilities.getWindowAncestor(this);
        JPanel controlPanel = currentJFrame.getControlPanel();
        CardLayout layout = (CardLayout) controlPanel.getLayout();
        layout.show(controlPanel, "carListingPanel");
    }// GEN-LAST:event_carButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTable BookingListingTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox pendingApprovalCheckBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JCheckBox unpaidCheckBox;
    // End of variables declaration//GEN-END:variables
}
